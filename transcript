# current register file data_in is 170 (b'10101010), wr_en is 1, and wr_addr is 1
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 170, 10101010
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 1
# prog_ctr is    3
# addi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 0
# We are incrementing i =   6 by 00000001 =   1 to get   7
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 170, 10101010
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 0
# prog_ctr is    4
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =   7 by 00000001 =   1 to get   8
# load function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 0
# we are trying to load at Mem[  7]
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 5
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   8, 00001000
# $2 : 170, 10101010
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 5
# prog_ctr is    5
# we are trying to load at Mem[  7]
# we are trying to load at Mem[170]
# movr function
# current register file data_in is 170 (b'10101010), wr_en is 1, and wr_addr is 2
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   8, 00001000
# $2 : 170, 10101010
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is    6
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is    7
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00001000 is shifted right by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is    8
# 00000000 is shifted right by   4 bits to give 00000000
# 00000111 is shifted right by   0 bits to give 00000111
# movi function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 4
# prog_ctr is    9
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000000 is shifted left by   1 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   10
# 00000000 is shifted left by   0 bits to give 00000000
# movi function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   0, 00000000
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is   11
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   12
# 00000000 is shifted left by   1 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :  85, 01010101
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   13
# xor function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 1
# 00000000 is xor with 00000000 to yield 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   14
# 00000111 is xor with 00000000 to yield 00000111
# movr function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 6
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   15
# rxor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 00000000 to get 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   16
# we have reduce xor'd 00000001 to get 00000001
# movr function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 6
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   17
# xor function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 1
# 00000000 is xor with 00000000 to yield 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   18
# 00000111 is xor with 00000000 to yield 00000111
# movr function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 7
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 7
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 7
# prog_ctr is   19
# slr function
# 00000000 is shifted right by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   20
# sll function
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   21
# 00000111 is shifted left by   0 bits to give 00000111
# addi function
# We are decrementing i =   7 by 00000011 = 1 to get   6
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 0
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 0
# prog_ctr is   22
# addi: instruction is: 000100011
# addi: immedB going into ALU inB is: 00000011
# We are decrementing i =   6 by 00000011 = 1 to get   5
# We are incrementing i =   6 by 00000000 =   0 to get   6
# load function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 0
# we are trying to load at Mem[  6]
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 4
# prog_ctr is   23
# we are trying to load at Mem[  6]
# we are trying to load at Mem[  0]
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 2
# prog_ctr is   24
# load function
# we are trying to load at Mem[  6]
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 4
# prog_ctr is   25
# we are trying to load at Mem[  8]
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 3
# prog_ctr is   26
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 :   8, 00001000
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is   27
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00001000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 :   8, 00001000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   28
# 00000000 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   8, 00001000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   29
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   8, 00001000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   30
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   8, 00001000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   31
# xor function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 1
# 00000000 is xor with 00000000 to yield 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   8, 00001000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   32
# 00001000 is xor with 00000100 to yield 00001100
# sll function
# 00001000 is shifted left by   4 bits to give 10000000
# current register file data_in is  12 (b'00001100), wr_en is 1, and wr_addr is 3
# current register file data_in is 128 (b'10000000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   8, 00001000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 128 (b'10000000) into register 3
# prog_ctr is   33
# 10000000 is shifted left by   4 bits to give 00000000
# 10000000 is shifted left by   5 bits to give 00000000
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 10000000 is shifted right by   5 bits to give 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 3
# prog_ctr is   34
# 00000100 is shifted right by   5 bits to give 00000000
# 00000000 is shifted right by   0 bits to give 00000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 6
# prog_ctr is   35
# xor function
# 00000000 is xor with 00000100 to yield 00000100
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 1
# prog_ctr is   36
# 00000100 is xor with 00000100 to yield 00000000
# 00000110 is xor with 00000100 to yield 00000010
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 6
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 6
# prog_ctr is   37
# rxor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 00000100 to get 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 2
# prog_ctr is   38
# we have reduce xor'd 00000100 to get 00000001
# sll function
# 00000001 is shifted left by   4 bits to give 00010000
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :   1, 00000001
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 2
# prog_ctr is   39
# 00010000 is shifted left by   4 bits to give 00000000
# 00000100 is shifted left by   5 bits to give 10000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# current register file data_in is 128 (b'10000000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :  16, 00010000
# $3 :   4, 00000100
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 128 (b'10000000) into register 3
# prog_ctr is   40
# 10000000 is shifted left by   5 bits to give 00000000
# 00000100 is shifted left by   4 bits to give 01000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is  64 (b'01000000), wr_en is 1, and wr_addr is 6
# current register file data_in is 128 (b'10000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :  16, 00010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   4, 00000100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 128 (b'10000000) into register 6
# prog_ctr is   41
# xor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# 00010000 is xor with 10000000 to yield 10010000
# current register file data_in is 144 (b'10010000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 :  16, 00010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 : 128, 10000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 144 (b'10010000) into register 2
# prog_ctr is   42
# 10010000 is xor with 10000000 to yield 00010000
# 00000100 is xor with 00000100 to yield 00000000
# movr function
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 1
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
# current register file data_in is 144 (b'10010000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 : 144, 10010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 : 128, 10000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 144 (b'10010000) into register 6
# prog_ctr is   43
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   4, 00000100
# $2 : 144, 10010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   44
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 144, 10010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is   45
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000000 is shifted right by   6 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 144, 10010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   46
# 10000000 is shifted right by 144 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 144, 10010000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   47
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 4
# prog_ctr is   48
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   2 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   49
# 00000000 is shifted right by   6 bits to give 00000000
# sll function
# 00000000 is shifted left by   6 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   50
# 00000000 is shifted left by   2 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   51
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   52
# 10000000 is xor with 00000110 to yield 10000110
# slr function
# 10000000 is shifted right by   6 bits to give 00000010
# current register file data_in is 134 (b'10000110), wr_en is 1, and wr_addr is 3
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 128, 10000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 3
# prog_ctr is   53
# 00000010 is shifted right by   6 bits to give 00000000
# 00000000 is shifted right by   0 bits to give 00000000
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   54
# current register file data_in is  12 (b'00001100), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000010 is shifted left by   4 bits to give 00100000
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 3
# prog_ctr is   55
# 00100000 is shifted left by   4 bits to give 00000000
# 00000000 is shifted left by 144 bits to give 00000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 4
# prog_ctr is   56
# xor function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000000 is xor with 00100000 to yield 00100000
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 1
# prog_ctr is   57
# 00100000 is xor with 00100000 to yield 00000000
# 00000110 is xor with 00000110 to yield 00000000
# load function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# we are trying to load at Mem[  6]
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 5
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   6, 00000110
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 5
# prog_ctr is   58
# we are trying to load at Mem[  6]
# we are trying to load at Mem[  0]
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   8, 00001000
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 2
# prog_ctr is   59
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   8, 00001000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   8, 00001000
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   60
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00001000 is shifted left by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   8, 00001000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   61
# 00000000 is shifted left by   7 bits to give 00000000
# 00100000 is shifted left by  32 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   62
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   63
# 00100000 is shifted right by   4 bits to give 00000010
# movr function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 4
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   64
# xor function
# 00100000 is xor with 00000000 to yield 00100000
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 1
# prog_ctr is   65
# 00000110 is xor with 10010000 to yield 10010110
# movr function
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 4
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 4
# prog_ctr is   66
# rxor function
# current register file data_in is 144 (b'10010000), wr_en is 1, and wr_addr is 3
# we have reduce xor'd 00100000 to get 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :  32, 00100000
# $4 :  32, 00100000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 3
# prog_ctr is   67
# we have reduce xor'd 00100000 to get 00000001
# we have reduce xor'd 10010000 to get 00000000
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :  32, 00100000
# $5 :   7, 00000111
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 5
# prog_ctr is   68
# current register file data_in is  13 (b'00001101), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000001 is shifted left by   2 bits to give 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :  32, 00100000
# $5 :   2, 00000010
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 3
# prog_ctr is   69
# 00000100 is shifted left by   2 bits to give 00010000
# 00100000 is shifted left by  32 bits to give 00000000
# movr function
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 1
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :  32, 00100000
# $5 :   2, 00000010
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   70
# xor function
# current register file data_in is 144 (b'10010000), wr_en is 1, and wr_addr is 3
# 00000100 is xor with 00000000 to yield 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 3
# prog_ctr is   71
# 00000100 is xor with 10010000 to yield 10010100
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 :   4, 00000100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 148 (b'10010100) into register 3
# prog_ctr is   72
# 10010100 is xor with 10010000 to yield 00000100
# 00100000 is xor with 10010000 to yield 10110000
# movr function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 1
# current register file data_in is 176 (b'10110000), wr_en is 1, and wr_addr is 6
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 144, 10010000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 148 (b'10010100) into register 6
# prog_ctr is   73
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :  32, 00100000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   74
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is   75
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   76
# 00000000 is shifted right by   2 bits to give 00000000
# movi function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is   77
# current register file data_in is  14 (b'00001110), wr_en is 1, and wr_addr is 2
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   78
# slr function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   5 bits to give 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   79
# 00000000 is shifted right by   7 bits to give 00000000
# sll function
# 00000000 is shifted left by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   80
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   81
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   82
# 10010100 is xor with 10010100 to yield 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   83
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 5
# prog_ctr is   84
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   85
# 00000000 is shifted left by   0 bits to give 00000000
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   86
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   87
# 00000110 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 5
# prog_ctr is   88
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   1 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   89
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   90
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   91
# 10010100 is xor with 10010100 to yield 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   92
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is   93
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   6 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   94
# 00000000 is shifted left by   0 bits to give 00000000
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   95
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   96
# 00000110 is shifted right by 148 bits to give 00000000
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 5
# prog_ctr is   97
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   2 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   98
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   99
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is  100
# 10010100 is xor with 00000000 to yield 10010100
# movr function
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 148 (b'10010100) into register 2
# prog_ctr is  101
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 148, 10010100
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is  102
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 10010100 is shifted right by   7 bits to give 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 : 148, 10010100
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 2
# prog_ctr is  103
# 00000001 is shifted right by   7 bits to give 00000000
# 00000110 is shifted right by   0 bits to give 00000110
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 5
# prog_ctr is  104
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000001 is shifted left by   3 bits to give 00001000
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 2
# prog_ctr is  105
# 00001000 is shifted left by   3 bits to give 01000000
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
# current register file data_in is  64 (b'01000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 4
# prog_ctr is  106
# xor function
# 00000000 is xor with 00001000 to yield 00001000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   0, 00000000
# $2 :   8, 00001000
# $3 : 148, 10010100
# $4 :   8, 00001000
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 1
# prog_ctr is  107
# 00001000 is xor with 00001000 to yield 00000000
# 10010100 is xor with 00001000 to yield 10011100
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# current register file data_in is 156 (b'10011100), wr_en is 1, and wr_addr is 2
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   8, 00001000
# $3 : 148, 10010100
# $4 :   8, 00001000
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 148 (b'10010100) into register 2
# prog_ctr is  108
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 148, 10010100
# $3 : 148, 10010100
# $4 :   8, 00001000
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 4
# prog_ctr is  109
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 3
# sll function
# 10010100 is shifted left by   2 bits to give 01010000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is  80 (b'01010000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 148, 10010100
# $3 : 148, 10010100
# $4 :   2, 00000010
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  80 (b'01010000) into register 2
# prog_ctr is  110
# 01010000 is shifted left by   2 bits to give 01000000
# 00001000 is shifted left by   0 bits to give 00001000
# movi function
# current register file data_in is  64 (b'01000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :  80, 01010000
# $3 : 148, 10010100
# $4 :   2, 00000010
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is  111
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 01010000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :  80, 01010000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  112
# 00000000 is shifted right by   7 bits to give 00000000
# 00001000 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   3, 00000011
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 5
# prog_ctr is  113
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  114
# 00001000 is shifted left by   7 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   7, 00000111
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is  115
# xor function
# 00001000 is xor with 00000000 to yield 00001000
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 1
# prog_ctr is  116
# 10010100 is xor with 00000000 to yield 10010100
# movr function
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 148 (b'10010100) into register 2
# prog_ctr is  117
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 10010100 is shifted left by   4 bits to give 01000000
# current register file data_in is  64 (b'01000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 148, 10010100
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  64 (b'01000000) into register 2
# prog_ctr is  118
# 01000000 is shifted left by   4 bits to give 00000000
# 00001000 is shifted left by   0 bits to give 00001000
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :  64, 01000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is  119
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 01000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :  64, 01000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  120
# 00000000 is shifted right by   7 bits to give 00000000
# 00001000 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is  121
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  122
# 00001000 is shifted left by   0 bits to give 00001000
# movr function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is  123
# xor function
# 00001000 is xor with 00000000 to yield 00001000
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 1
# prog_ctr is  124
# 00000110 is xor with 10010100 to yield 10010010
# movr function
# current register file data_in is 146 (b'10010010), wr_en is 1, and wr_addr is 4
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 4
# prog_ctr is  125
# rxor function
# current register file data_in is 148 (b'10010100), wr_en is 1, and wr_addr is 3
# we have reduce xor'd 00001000 to get 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 148, 10010100
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 3
# prog_ctr is  126
# we have reduce xor'd 00001000 to get 00000001
# we have reduce xor'd 00000101 to get 00000000
# movi function
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :   8, 00001000
# $5 :   5, 00000101
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 5
# prog_ctr is  127
# current register file data_in is  13 (b'00001101), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000001 is shifted left by   1 bits to give 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 3
# prog_ctr is  128
# 00000010 is shifted left by   1 bits to give 00000100
# 00000010 is shifted left by 148 bits to give 00000000
# xor function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
# 00000010 is xor with 10010100 to yield 10010110
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 150 (b'10010110) into register 3
# prog_ctr is  129
# 10010110 is xor with 10010100 to yield 00000010
# 00001000 is xor with 10010100 to yield 10011100
# movr function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 1
# current register file data_in is 156 (b'10011100), wr_en is 1, and wr_addr is 6
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 150, 10010110
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 148, 10010100
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 150 (b'10010110) into register 6
# prog_ctr is  130
# rxor function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 10010110 to get 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 150, 10010110
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  131
# we have reduce xor'd 00000000 to get 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 : 150, 10010110
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is  132
# we have reduce xor'd 00000000 to get 00000000
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  133
# 00000000 is xor with 10010110 to yield 10010110
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 150 (b'10010110) into register 2
# prog_ctr is  134
# 10010110 is xor with 10010110 to yield 00000000
# 00001000 is xor with 00001000 to yield 00000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 150 (b'10010110) into register 6
# prog_ctr is  135
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   1, 00000001
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is  136
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 0
# add function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is  12 (b'00001100), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   6, 00000110
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  12 (b'00001100) into register 0
# prog_ctr is  137
# current register file data_in is  18 (b'00010010), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  12, 00001100
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  18 (b'00010010) into register 0
# prog_ctr is  138
# current register file data_in is  24 (b'00011000), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  18, 00010010
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  24 (b'00011000) into register 0
# prog_ctr is  139
# current register file data_in is  30 (b'00011110), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  24, 00011000
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  30 (b'00011110) into register 0
# prog_ctr is  140
# current register file data_in is  36 (b'00100100), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  30, 00011110
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  36 (b'00100100) into register 0
# prog_ctr is  141
# store function
# current register file data_in is  42 (b'00101010), wr_en is 1, and wr_addr is 0
# we are trying to store at Mem[ 36]
# current register file data_in is 186 (b'10111010), wr_en is 0, and wr_addr is 0
# current register file data_in is  36 (b'00100100), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  36, 00100100
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# prog_ctr is  142
# we are trying to store at Mem[ 36]
# addi function
# We are incrementing i =  36 by 00000001 =   1 to get  37
# current register file data_in is  37 (b'00100101), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  36, 00100100
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  37 (b'00100101) into register 0
# prog_ctr is  143
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =  37 by 00000001 =   1 to get  38
# We are decrementing i =  37 by 00000011 = 1 to get  36
# store function
# current register file data_in is  38 (b'00100110), wr_en is 1, and wr_addr is 0
# we are trying to store at Mem[ 37]
# current register file data_in is  36 (b'00100100), wr_en is 0, and wr_addr is 0
# current register file data_in is  37 (b'00100101), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  37, 00100101
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# prog_ctr is  144
# we are trying to store at Mem[ 37]
# sub function
# current register file data_in is  31 (b'00011111), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  37, 00100101
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  31 (b'00011111) into register 0
# prog_ctr is  145
# current register file data_in is  25 (b'00011001), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  31, 00011111
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  25 (b'00011001) into register 0
# prog_ctr is  146
# current register file data_in is  19 (b'00010011), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  25, 00011001
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  19 (b'00010011) into register 0
# prog_ctr is  147
# current register file data_in is  13 (b'00001101), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  19, 00010011
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  13 (b'00001101) into register 0
# prog_ctr is  148
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  13, 00001101
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 0
# prog_ctr is  149
# addi function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 0
# We are incrementing i =   7 by 00000001 =   1 to get   8
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   7, 00000111
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 0
# prog_ctr is  150
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =   8 by 00000001 =   1 to get   9
# We are decrementing i =   8 by 00000010 = 2 to get   6
# movi function
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 1
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   0, 00000000
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 3
# prog_ctr is  151
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# movi function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  152
# current register file data_in is  11 (b'00001011), wr_en is 1, and wr_addr is 0
# add function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  153
# current register file data_in is 150 (b'10010110), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote 150 (b'10010110) into register 2
# prog_ctr is  154
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 : 150, 10010110
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  44 (b'00101100) into register 2
# prog_ctr is  155
# current register file data_in is 194 (b'11000010), wr_en is 1, and wr_addr is 2
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  44 (b'00101100) into register 2
# prog_ctr is  156
# movr function
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 4
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :   8, 00001000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  44 (b'00101100) into register 4
# prog_ctr is  157
# lt function
# current register file data_in is   8 (b'00001000), wr_en is 0, and wr_addr is 0
# current register file data_in is   1 (b'00000001), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  44, 00101100
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# prog_ctr is  158
# branch function
# we have reduce xor'd 00101100 to get 00000001
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  44, 00101100
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# prog_ctr is    1
# load function
# we are trying to load at Mem[  8]
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  44, 00101100
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 4
# prog_ctr is    2
# we are trying to load at Mem[  8]
# we are trying to load at Mem[ 44]
# movr function
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 1
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   8, 00001000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 1
# prog_ctr is    3
# addi function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 0
# We are incrementing i =   8 by 00000001 =   1 to get   9
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :  16, 00010000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   9 (b'00001001) into register 0
# prog_ctr is    4
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =   9 by 00000001 =   1 to get  10
# load function
# current register file data_in is  10 (b'00001010), wr_en is 1, and wr_addr is 0
# we are trying to load at Mem[  9]
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 5
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :  16, 00010000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   6, 00000110
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 5
# prog_ctr is    5
# we are trying to load at Mem[  9]
# we are trying to load at Mem[ 44]
# movr function
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 2
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :  16, 00010000
# $2 :  44, 00101100
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is    6
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :  16, 00010000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is    7
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00010000 is shifted right by   4 bits to give 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :  16, 00010000
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 1
# prog_ctr is    8
# 00000001 is shifted right by   4 bits to give 00000000
# 00001001 is shifted right by   0 bits to give 00001001
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   1, 00000001
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 4
# prog_ctr is    9
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000001 is shifted left by   1 bits to give 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   1, 00000001
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 1
# prog_ctr is   10
# 00000010 is shifted left by   1 bits to give 00000100
# 00000010 is shifted left by   0 bits to give 00000010
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 1
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   0, 00000000
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is   11
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   12
# 00000010 is shifted left by   1 bits to give 00000100
# movr function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 6
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 : 150, 10010110
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   13
# xor function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 1
# 00000010 is xor with 00000000 to yield 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 1
# prog_ctr is   14
# 00001001 is xor with 00000000 to yield 00001001
# movr function
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 6
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 6
# prog_ctr is   15
# rxor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 00000010 to get 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   2, 00000010
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 2
# prog_ctr is   16
# we have reduce xor'd 00000010 to get 00000001
# we have reduce xor'd 00000001 to get 00000001
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   2, 00000010
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 6
# prog_ctr is   17
# xor function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 1
# 00000010 is xor with 00000001 to yield 00000011
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   2, 00000010
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 1
# prog_ctr is   18
# 00000011 is xor with 00000001 to yield 00000010
# 00001001 is xor with 00000001 to yield 00001000
# movr function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 0
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 7
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 7
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   3, 00000011
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   0, 00000000
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 7
# prog_ctr is   19
# slr function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 1
# 00000011 is shifted right by   5 bits to give 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   3, 00000011
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   20
# 00000000 is shifted right by   5 bits to give 00000000
# sll function
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   21
# 00001001 is shifted left by   3 bits to give 01001000
# addi function
# We are decrementing i =   9 by 00000011 = 1 to get   8
# current register file data_in is  72 (b'01001000), wr_en is 1, and wr_addr is 0
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   8 (b'00001000) into register 0
# prog_ctr is   22
# addi: instruction is: 000100011
# addi: immedB going into ALU inB is: 00000011
# We are decrementing i =   8 by 00000011 = 1 to get   7
# We are incrementing i =   8 by 00000000 =   0 to get   8
# load function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 0
# we are trying to load at Mem[  8]
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :   1, 00000001
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 4
# prog_ctr is   23
# we are trying to load at Mem[  8]
# we are trying to load at Mem[  1]
# movr function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 2
# prog_ctr is   24
# load function
# we are trying to load at Mem[  8]
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 4
# prog_ctr is   25
# we are trying to load at Mem[ 16]
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :   6, 00000110
# $4 :  16, 00010000
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 3
# prog_ctr is   26
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :  16, 00010000
# $4 :  16, 00010000
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is   27
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00010000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :  16, 00010000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   28
# 00000000 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  16, 00010000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   29
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  16, 00010000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   30
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  16, 00010000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   1, 00000001
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   31
# xor function
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 1
# 00000000 is xor with 00000000 to yield 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  16, 00010000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   32
# 00010000 is xor with 00000100 to yield 00010100
# sll function
# 00010000 is shifted left by   4 bits to give 00000000
# current register file data_in is  20 (b'00010100), wr_en is 1, and wr_addr is 3
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :  16, 00010000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   33
# 00000000 is shifted left by   4 bits to give 00000000
# 00000000 is shifted left by   5 bits to give 00000000
# slr function
# 00000000 is shifted right by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   34
# 00000000 is shifted right by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   35
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   36
# 00001000 is xor with 00000000 to yield 00001000
# movr function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 6
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   37
# rxor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 00000000 to get 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   38
# we have reduce xor'd 00000100 to get 00000001
# sll function
# 00000000 is shifted left by   4 bits to give 00000000
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   39
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   40
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   41
# xor function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 2
# 00000000 is xor with 00000000 to yield 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   42
# 00000000 is xor with 00000100 to yield 00000100
# movr function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 6
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   43
# movr function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 1
# prog_ctr is   44
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   3, 00000011
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is   45
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000011 is shifted right by   6 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   3, 00000011
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   46
# 00000000 is shifted right by   6 bits to give 00000000
# 00000000 is shifted right by   0 bits to give 00000000
# movr function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is   47
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 4
# prog_ctr is   48
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000011 is shifted right by   2 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   49
# 00000000 is shifted right by   2 bits to give 00000000
# 00000000 is shifted right by   6 bits to give 00000000
# sll function
# 00000000 is shifted left by   6 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   50
# 00000000 is shifted left by   2 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   2, 00000010
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   51
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   52
# 00000000 is xor with 00000110 to yield 00000110
# slr function
# 00000000 is shifted right by   6 bits to give 00000000
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 3
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   53
# 00000000 is shifted right by   0 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   54
# current register file data_in is  12 (b'00001100), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   55
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   56
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   57
# 00001000 is xor with 00000110 to yield 00001110
# load function
# we are trying to load at Mem[  8]
# current register file data_in is 128 (b'10000000), wr_en is 1, and wr_addr is 5
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 5
# prog_ctr is   58
# we are trying to load at Mem[  8]
# we are trying to load at Mem[  0]
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :  16, 00010000
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  16 (b'00010000) into register 2
# prog_ctr is   59
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :  16, 00010000
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   60
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00010000 is shifted left by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  16, 00010000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   61
# 00000000 is shifted left by   7 bits to give 00000000
# 00000000 is shifted left by   0 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   62
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   63
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   64
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   65
# 00001000 is xor with 00000000 to yield 00001000
# movr function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   66
# rxor function
# we have reduce xor'd 00000000 to get 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   67
# we have reduce xor'd 00000000 to get 00000000
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 5
# prog_ctr is   68
# current register file data_in is  13 (b'00001101), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000000 is shifted left by   2 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   69
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   70
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   71
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is   72
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is   73
# movr function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 1
# prog_ctr is   74
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   3, 00000011
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is   75
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# 00000011 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   3, 00000011
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   76
# 00000000 is shifted right by   7 bits to give 00000000
# 00000000 is shifted right by   2 bits to give 00000000
# movi function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is   77
# current register file data_in is  14 (b'00001110), wr_en is 1, and wr_addr is 2
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is   78
# slr function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 2
# 00000011 is shifted right by   5 bits to give 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   79
# 00000000 is shifted right by   5 bits to give 00000000
# 00000000 is shifted right by   7 bits to give 00000000
# sll function
# 00000000 is shifted left by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   80
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   81
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   82
# movr function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is   83
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 5
# prog_ctr is   84
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000011 is shifted left by   4 bits to give 00110000
# current register file data_in is  48 (b'00110000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  48 (b'00110000) into register 2
# prog_ctr is   85
# 00110000 is shifted left by   4 bits to give 00000000
# 00000000 is shifted left by   3 bits to give 00000000
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  48, 00110000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   86
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00110000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :  48, 00110000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   87
# 00000000 is shifted right by   7 bits to give 00000000
# 00001000 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 5
# prog_ctr is   88
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   1 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is   89
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is   90
# xor function
# 00000000 is xor with 00000000 to yield 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 1
# prog_ctr is   91
# movr function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is   92
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is   93
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000011 is shifted left by   6 bits to give 11000000
# current register file data_in is 192 (b'11000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   3, 00000011
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote 192 (b'11000000) into register 2
# prog_ctr is   94
# 11000000 is shifted left by   6 bits to give 00000000
# 00000000 is shifted left by   3 bits to give 00000000
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 1
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 : 192, 11000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is   95
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 11000000 is shifted right by   7 bits to give 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 : 192, 11000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 2
# prog_ctr is   96
# 00000001 is shifted right by   7 bits to give 00000000
# 00001000 is shifted right by   0 bits to give 00001000
# movi function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 5
# prog_ctr is   97
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000001 is shifted left by   2 bits to give 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   1, 00000001
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 2
# prog_ctr is   98
# 00000100 is shifted left by   2 bits to give 00010000
# 00000000 is shifted left by   0 bits to give 00000000
# movr function
# current register file data_in is  16 (b'00010000), wr_en is 1, and wr_addr is 1
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   4, 00000100
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is   99
# xor function
# 00000000 is xor with 00000100 to yield 00000100
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   0, 00000000
# $2 :   4, 00000100
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 1
# prog_ctr is  100
# 00000100 is xor with 00000100 to yield 00000000
# 00000000 is xor with 00000100 to yield 00000100
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 2
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   4, 00000100
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  101
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   2, 00000010
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is  102
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  103
# 00001000 is shifted right by   3 bits to give 00000001
# movi function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 5
# prog_ctr is  104
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   3 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  105
# 00000100 is shifted left by   4 bits to give 01000000
# movr function
# current register file data_in is  64 (b'01000000), wr_en is 1, and wr_addr is 4
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is  106
# xor function
# 00000100 is xor with 00000000 to yield 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 1
# prog_ctr is  107
# 00000000 is xor with 00000000 to yield 00000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  108
# movi function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 4
# prog_ctr is  109
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 3
# sll function
# 00000000 is shifted left by   2 bits to give 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   2, 00000010
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  110
# 00000100 is shifted left by   3 bits to give 00100000
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   2, 00000010
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 4
# prog_ctr is  111
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  112
# 00000100 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   3, 00000011
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 5
# prog_ctr is  113
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  114
# 00000100 is shifted left by   7 bits to give 00000000
# movr function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   7, 00000111
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is  115
# xor function
# 00000100 is xor with 00000000 to yield 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 1
# prog_ctr is  116
# 00000000 is xor with 00000000 to yield 00000000
# movr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  117
# sll function
# 00000000 is shifted left by   4 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  118
# 00000100 is shifted left by   3 bits to give 00100000
# movi function
# current register file data_in is   7 (b'00000111), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   4, 00000100
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   7 (b'00000111) into register 5
# prog_ctr is  119
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 4
# slr function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted right by   7 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  120
# 00000100 is shifted right by   7 bits to give 00000000
# movi function
# current register file data_in is   5 (b'00000101), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   7, 00000111
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   5 (b'00000101) into register 5
# prog_ctr is  121
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# 00000000 is shifted left by   5 bits to give 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  122
# 00000100 is shifted left by   0 bits to give 00000100
# movr function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 4
# prog_ctr is  123
# xor function
# 00000100 is xor with 00000000 to yield 00000100
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 1
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 1
# prog_ctr is  124
# 00001000 is xor with 00000000 to yield 00001000
# movr function
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   0, 00000000
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   4 (b'00000100) into register 4
# prog_ctr is  125
# rxor function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# we have reduce xor'd 00000100 to get 00000001
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 3
# prog_ctr is  126
# we have reduce xor'd 00000100 to get 00000001
# we have reduce xor'd 00000101 to get 00000000
# movi function
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :   4, 00000100
# $5 :   5, 00000101
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 5
# prog_ctr is  127
# current register file data_in is  13 (b'00001101), wr_en is 1, and wr_addr is 3
# sll function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
# 00000001 is shifted left by   1 bits to give 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   1, 00000001
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 3
# prog_ctr is  128
# 00000010 is shifted left by   1 bits to give 00000100
# 00000010 is shifted left by   0 bits to give 00000010
# xor function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 3
# 00000010 is xor with 00000000 to yield 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 3
# prog_ctr is  129
# 00000100 is xor with 00000000 to yield 00000100
# movr function
# current register file data_in is   4 (b'00000100), wr_en is 1, and wr_addr is 6
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 6
# prog_ctr is  130
# rxor function
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
# we have reduce xor'd 00000010 to get 00000001
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   2, 00000010
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   2, 00000010
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   1 (b'00000001) into register 2
# prog_ctr is  131
# we have reduce xor'd 00000010 to get 00000001
# we have reduce xor'd 00000011 to get 00000000
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   1, 00000001
# $3 :   2, 00000010
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   2, 00000010
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 3
# prog_ctr is  132
# we have reduce xor'd 00000011 to get 00000000
# we have reduce xor'd 00000011 to get 00000000
# xor function
# 00000001 is xor with 00000011 to yield 00000010
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   1, 00000001
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   2, 00000010
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   2 (b'00000010) into register 2
# prog_ctr is  133
# 00000010 is xor with 00000011 to yield 00000001
# 00000010 is xor with 00000010 to yield 00000000
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 2
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   2, 00000010
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   2, 00000010
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  134
# 00000000 is xor with 00000010 to yield 00000010
# 00000100 is xor with 00000100 to yield 00000000
# movr function
# current register file data_in is   2 (b'00000010), wr_en is 1, and wr_addr is 1
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 6
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   2, 00000010
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 6
# prog_ctr is  135
# movi function
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 5
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   1, 00000001
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 5
# prog_ctr is  136
# current register file data_in is   1 (b'00000001), wr_en is 1, and wr_addr is 0
# add function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 0
# current register file data_in is  14 (b'00001110), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   8, 00001000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  14 (b'00001110) into register 0
# prog_ctr is  137
# current register file data_in is  20 (b'00010100), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  14, 00001110
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  20 (b'00010100) into register 0
# prog_ctr is  138
# current register file data_in is  26 (b'00011010), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  20, 00010100
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  26 (b'00011010) into register 0
# prog_ctr is  139
# current register file data_in is  32 (b'00100000), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  26, 00011010
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  32 (b'00100000) into register 0
# prog_ctr is  140
# current register file data_in is  38 (b'00100110), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  32, 00100000
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  38 (b'00100110) into register 0
# prog_ctr is  141
# store function
# current register file data_in is  44 (b'00101100), wr_en is 1, and wr_addr is 0
# we are trying to store at Mem[ 38]
# current register file data_in is  38 (b'00100110), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  38, 00100110
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# prog_ctr is  142
# we are trying to store at Mem[ 38]
# addi function
# We are incrementing i =  38 by 00000001 =   1 to get  39
# current register file data_in is  39 (b'00100111), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  38, 00100110
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  39 (b'00100111) into register 0
# prog_ctr is  143
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =  39 by 00000001 =   1 to get  40
# We are decrementing i =  39 by 00000011 = 1 to get  38
# store function
# current register file data_in is  40 (b'00101000), wr_en is 1, and wr_addr is 0
# we are trying to store at Mem[ 39]
# current register file data_in is  38 (b'00100110), wr_en is 0, and wr_addr is 0
# current register file data_in is  39 (b'00100111), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  39, 00100111
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# prog_ctr is  144
# we are trying to store at Mem[ 39]
# sub function
# current register file data_in is  33 (b'00100001), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  39, 00100111
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  33 (b'00100001) into register 0
# prog_ctr is  145
# current register file data_in is  27 (b'00011011), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  33, 00100001
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  27 (b'00011011) into register 0
# prog_ctr is  146
# current register file data_in is  21 (b'00010101), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  27, 00011011
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  21 (b'00010101) into register 0
# prog_ctr is  147
# current register file data_in is  15 (b'00001111), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  21, 00010101
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  15 (b'00001111) into register 0
# prog_ctr is  148
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  15, 00001111
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   9 (b'00001001) into register 0
# prog_ctr is  149
# addi function
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 0
# We are incrementing i =   9 by 00000001 =   1 to get  10
# current register file data_in is  10 (b'00001010), wr_en is 1, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :   9, 00001001
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote  10 (b'00001010) into register 0
# prog_ctr is  150
# addi: instruction is: 000100001
# addi: immedB going into ALU inB is: 00000001
# We are incrementing i =  10 by 00000001 =   1 to get  11
# We are decrementing i =   4 by 00000010 = 2 to get   2
# movi function
# current register file data_in is  11 (b'00001011), wr_en is 1, and wr_addr is 1
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 3
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   0, 00000000
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 3
# prog_ctr is  151
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# movi function
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   0 (b'00000000) into register 2
# prog_ctr is  152
# current register file data_in is  11 (b'00001011), wr_en is 1, and wr_addr is 0
# add function
# current register file data_in is   0 (b'00000000), wr_en is 1, and wr_addr is 2
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   0, 00000000
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is  153
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 2
# current register file data_in is   3 (b'00000011), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   3, 00000011
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is  154
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   3, 00000011
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   3 (b'00000011) into register 2
# prog_ctr is  155
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 2
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   3, 00000011
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 2
# prog_ctr is  156
# movr function
# current register file data_in is   9 (b'00001001), wr_en is 1, and wr_addr is 1
# current register file data_in is   8 (b'00001000), wr_en is 1, and wr_addr is 4
# current register file data_in is   6 (b'00000110), wr_en is 1, and wr_addr is 4
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   4, 00000100
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   6 (b'00000110) into register 4
# prog_ctr is  157
# lt function
# current register file data_in is  10 (b'00001010), wr_en is 0, and wr_addr is 0
# current register file data_in is   0 (b'00000000), wr_en is 0, and wr_addr is 0
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# prog_ctr is  158
# branch function
# we have reduce xor'd 00000110 to get 00000000
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# prog_ctr is  159
# we have reduce xor'd xxxxxxxx to get 0000000x
# current register file data_in is   X (b'0000000x), wr_en is 1, and wr_addr is X
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# prog_ctr is  160
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# prog_ctr is  161
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# prog_ctr is  162
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# prog_ctr is  163
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# prog_ctr is  164
#  --- REGISTER FILE VALUES --- 
# $0 :  10, 00001010
# $1 :   4, 00000100
# $2 :   6, 00000110
# $3 :   6, 00000110
# $4 :   6, 00000110
# $5 :   6, 00000110
# $6 :   0, 00000000
# $7 :   3, 00000011
#  ---------------------------- 
# We wrote   X (b'0000000x) into register X
# start program 1
#  
# 0000000000001111
# 0000000000001111
#  we have a match!
#  
# 0000000000110011
# 0000000000110011
#  we have a match!
#  
# 0000000001010101
# 0000000001010101
#  we have a match!
#  
# 0000000010010110
# 0000000010010110
#  we have a match!
#  
# 0000001100000011
# 0000001100000000
# erroneous output
#  
# 0000010100000101
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0000100100000110
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0001000100010001
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0010000100010010
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0100000100010100
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 1000000100010111
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0000000000000000
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0000000000000000
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0000000000000000
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# 0000000000000000
# xxxxxxxxxxxxxxxx
# erroneous output
#  
# program 1 score =     4 out of    15
# prog_ctr is  165
# ** Note: $stop    : C:/Users/Rick Truong/OneDrive/Desktop/Quartus Projects/CSE 141L Project - ARA/prog1_tb.sv(69)
#    Time: 7995 ns  Iteration: 0  Instance: /prog1_tb
# Break in Module prog1_tb at C:/Users/Rick Truong/OneDrive/Desktop/Quartus Projects/CSE 141L Project - ARA/prog1_tb.sv line 69
